variables
{
	global:
		0: king1
		1: king2
		2: i
}

subroutines
{
	0: SetupRound
	1: SetupBoard
	2: PopulateWithAI
}

rule("Game Setup")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Call Subroutine(PopulateWithAI);
		Set Match Time(0);
	}
}

rule("Game Setup (Post-Start)")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Wait(2, Ignore Condition);
		Call Subroutine(SetupRound);
	}
}

rule("SetupRound()")
{
	event
	{
		Subroutine;
		SetupRound;
	}

	actions
	{
		Call Subroutine(SetupBoard);
		Enable Built-In Game Mode Respawning(All Players(All Teams));
		Disable Built-In Game Mode Respawning(Global.king1);
		Disable Built-In Game Mode Respawning(Global.king2);
		Disable Built-In Game Mode Scoring;
	}
}

rule("SetupBoard()")
{
	event
	{
		Subroutine;
		SetupBoard;
	}

	actions
	{
		"Select King 1"
		Global.king1 = Random Value In Array(All Players(Team 1));
		"Position King 1"
		Teleport(Global.king1, Vector(-18, 0, 0));
		"Position Pieces 1"
		For Global Variable(i, 0, 5, 1);
			Teleport(Filtered Array(All Players(Team 1), Current Array Element != Global.king1)[Global.i], Vector(-14, 0, 8 - 4 * Global.i));
		End;
		"Select King 2"
		Global.king2 = Random Value In Array(All Players(Team 2));
		"Position King 2"
		Teleport(Global.king2, Vector(18, 0, 0));
		"Position Pieces 2"
		For Global Variable(i, 0, 5, 1);
			Teleport(Filtered Array(All Players(Team 2), Current Array Element != Global.king2)[Global.i], Vector(14, 0, -8 + 4 * Global.i));
		End;
	}
}

rule("PopulateWithAI()")
{
	event
	{
		Subroutine;
		PopulateWithAI;
	}

	actions
	{
		While(Count Of(All Players(Team 1)) < 6);
			Create Dummy Bot(Random Value In Array(All Heroes), Team 1, -1, Vector(0, 0, 0), Vector(0, 0, 0));
		End;
		While(Count Of(All Players(Team 2)) < 6);
			Create Dummy Bot(Random Value In Array(All Heroes), Team 2, -1, Vector(0, 0, 0), Vector(0, 0, 0));
		End;
	}
}