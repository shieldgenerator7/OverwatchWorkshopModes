rule("TEAM 2 Limitations")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Set Healing Dealt(Event Player, 0);
		Set Ability 1 Enabled(Event Player, False);
		Set Ability 2 Enabled(Event Player, False);
		Set Ultimate Ability Enabled(Event Player, False);
	}
}

rule("TEAM 2 Freeze when Team 1 sees them")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Is True For Any(All Living Players(Team 1), And(Is In View Angle(Current Array Element, Position Of(Event Player), 45),
			Is In Line of Sight(Position Of(Current Array Element), Position Of(Event Player), Barriers Do Not Block LOS))) == True;
		Global Variable(F) == True;
	}

	actions
	{
		Set Status(Event Player, Null, Frozen, 9999);
	}
}

rule("TEAM 2 Unfreeze when no one's looking")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Is True For Any(All Living Players(Team 1), And(Is In View Angle(Current Array Element, Position Of(Event Player), 45),
			Is In Line of Sight(Position Of(Current Array Element), Position Of(Event Player), Barriers Do Not Block LOS))) == False;
	}

	actions
	{
		Clear Status(Event Player, Frozen);
	}
}

rule("Player takes damage")
{
	event
	{
		Player Took Damage;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Set Player Variable(Event Player, A, 5);
		Chase Player Variable At Rate(Event Player, A, 0, 1, Destination and Rate);
		Destroy In-World Text(Player Variable(Event Player, T));
		Create In-World Text(All Players(All Teams), Player Variable(Event Player, A), Add(Vector(0, 1, 0), Position Of(Event Player)), 1,
			Clip Against Surfaces, Visible To Position and String);
		Set Player Variable(Event Player, T, Last Text ID);
	}
}

rule("Player Var A reaches 0")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Player Variable(Event Player, A) == 0;
	}

	actions
	{
		Destroy In-World Text(Player Variable(Event Player, T));
		Heal(Event Player, Null, 10000);
	}
}

rule("Team 2 respawns randomly")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
	}

	actions
	{
		Set Player Variable(Event Player, P, Random Value In Array(All Living Players(Team 1)));
		Set Player Variable(Event Player, Q, Vector(Random Integer(-20.000, 20), 0, Random Integer(-20.000, 20)));
		Teleport(Event Player, Nearest Walkable Position(Add(Position Of(Player Variable(Event Player, P)), Player Variable(Event Player,
			Q))));
	}
}

rule("Turn freezing on")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Interact) == True;
		Is Button Held(Event Player, Jump) == True;
	}

	actions
	{
		Set Global Variable(F, True);
	}
}

rule("Turn freezing off")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Interact) == True;
		Is Button Held(Event Player, Crouch) == True;
	}

	actions
	{
		Set Global Variable(F, False);
	}
}